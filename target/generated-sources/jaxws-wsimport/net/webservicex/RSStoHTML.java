
package net.webservicex;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "RSStoHTML", targetNamespace = "http://www.webserviceX.NET", wsdlLocation = "http://www.webservicex.net/RssToHTML.asmx?WSDL")
public class RSStoHTML
    extends Service
{

    private final static URL RSSTOHTML_WSDL_LOCATION;
    private final static WebServiceException RSSTOHTML_EXCEPTION;
    private final static QName RSSTOHTML_QNAME = new QName("http://www.webserviceX.NET", "RSStoHTML");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://www.webservicex.net/RssToHTML.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        RSSTOHTML_WSDL_LOCATION = url;
        RSSTOHTML_EXCEPTION = e;
    }

    public RSStoHTML() {
        super(__getWsdlLocation(), RSSTOHTML_QNAME);
    }

    public RSStoHTML(WebServiceFeature... features) {
        super(__getWsdlLocation(), RSSTOHTML_QNAME, features);
    }

    public RSStoHTML(URL wsdlLocation) {
        super(wsdlLocation, RSSTOHTML_QNAME);
    }

    public RSStoHTML(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, RSSTOHTML_QNAME, features);
    }

    public RSStoHTML(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RSStoHTML(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns RSStoHTMLSoap
     */
    @WebEndpoint(name = "RSStoHTMLSoap")
    public RSStoHTMLSoap getRSStoHTMLSoap() {
        return super.getPort(new QName("http://www.webserviceX.NET", "RSStoHTMLSoap"), RSStoHTMLSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RSStoHTMLSoap
     */
    @WebEndpoint(name = "RSStoHTMLSoap")
    public RSStoHTMLSoap getRSStoHTMLSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "RSStoHTMLSoap"), RSStoHTMLSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns RSStoHTMLSoap
     */
    @WebEndpoint(name = "RSStoHTMLSoap12")
    public RSStoHTMLSoap getRSStoHTMLSoap12() {
        return super.getPort(new QName("http://www.webserviceX.NET", "RSStoHTMLSoap12"), RSStoHTMLSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RSStoHTMLSoap
     */
    @WebEndpoint(name = "RSStoHTMLSoap12")
    public RSStoHTMLSoap getRSStoHTMLSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "RSStoHTMLSoap12"), RSStoHTMLSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns RSStoHTMLHttpGet
     */
    @WebEndpoint(name = "RSStoHTMLHttpGet")
    public RSStoHTMLHttpGet getRSStoHTMLHttpGet() {
        return super.getPort(new QName("http://www.webserviceX.NET", "RSStoHTMLHttpGet"), RSStoHTMLHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RSStoHTMLHttpGet
     */
    @WebEndpoint(name = "RSStoHTMLHttpGet")
    public RSStoHTMLHttpGet getRSStoHTMLHttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "RSStoHTMLHttpGet"), RSStoHTMLHttpGet.class, features);
    }

    /**
     * 
     * @return
     *     returns RSStoHTMLHttpPost
     */
    @WebEndpoint(name = "RSStoHTMLHttpPost")
    public RSStoHTMLHttpPost getRSStoHTMLHttpPost() {
        return super.getPort(new QName("http://www.webserviceX.NET", "RSStoHTMLHttpPost"), RSStoHTMLHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RSStoHTMLHttpPost
     */
    @WebEndpoint(name = "RSStoHTMLHttpPost")
    public RSStoHTMLHttpPost getRSStoHTMLHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "RSStoHTMLHttpPost"), RSStoHTMLHttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (RSSTOHTML_EXCEPTION!= null) {
            throw RSSTOHTML_EXCEPTION;
        }
        return RSSTOHTML_WSDL_LOCATION;
    }

}
